openapi: 3.0.3
info:
  title: Enabling crop loans on SAFAL - API Documentation
  description: >-
    API documentation for Safal portal, Beckn protocol server and Bank server
    communication
  version: 0.0.1
externalDocs:
  description: Find out more about Konnect
  url: 'https://github.com/Konnect-Agri'
paths:
  /search:
    post:
      tags:
        - search
      summary: Search for the loan catalog
      description: Search for the loan catalog
      operationId: search
      requestBody:
        description: Search for the loan catalog
        content:
          application/json:
            schema:
              type: object
              properties:
                context:
                  allOf:
                    - $ref: '#/components/schemas/Context'
                    - properties:
                        action:
                          enum:
                            - search
                message:
                  type: object
                  properties:
                    intent:
                      type: object
                      properties:
                        tags:
                          type: object
                          properties:
                            block:
                              type: string
                            district:
                              type: string
                            bank_name:
                              type: string
              required:
                - context
                - message
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  context:
                    allOf:
                      - $ref: '#/components/schemas/Context'
                      - properties:
                          action:
                            enum:
                              - on_search
                        required:
                          - action
                  message:
                    type: object
                    properties:
                      catalog:
                        $ref: '#/components/schemas/Catalog'
                    required:
                      - catalog
                required:
                  - context
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  context:
                    allOf:
                      - $ref: '#/components/schemas/Context'
                      - properties:
                          action:
                            enum:
                              - on_search
                        required:
                          - action
                  error:
                    $ref: '#/components/schemas/Error'
                required:
                  - context
  /select:
    post:
      tags:
        - select
      summary: Select a loan product from a catalog
      description: Select a loan product from a catalog
      operationId: select
      requestBody:
        description: Select a loan product from a catalog
        content:
          application/json:
            schema:
              type: object
              properties:
                context:
                  allOf:
                    - $ref: '#/components/schemas/Context'
                    - properties:
                        action:
                          enum:
                            - select
                      required:
                        - action
                message:
                  type: object
                  properties:
                    order:
                      $ref: '#/components/schemas/SelectRequestObject'
                  required:
                    - order
              required:
                - context
                - message
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  context:
                    allOf:
                      - $ref: '#/components/schemas/Context'
                      - properties:
                          action:
                            enum:
                              - on_search
                        required:
                          - action
                  message:
                    $ref: '#/components/schemas/SelectResponseObject'
                required:
                  - context
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  context:
                    allOf:
                      - $ref: '#/components/schemas/Context'
                      - properties:
                          action:
                            enum:
                              - on_search
                        required:
                          - action
                  error:
                    $ref: '#/components/schemas/Error'
                required:
                  - context
  /authenticate:
    post:
      tags:
        - authenticate
      summary: >-
        Send KCC number entered by the farmer to the bankâ€™s portal for
        validation
      operationId: authenticateFarmer
      requestBody:
        description: Validate farmer's KCC number
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FarmerKCCRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FarmerKCCSuccess'
        '400':
          description: Invalid KCC / Aadhaar Number Supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FarmerKCCError'
  /calculate:
    post:
      tags:
        - calculate
      summary: Send farmer's land and crop details to bank for NCL calculation
      operationId: calculateNCL
      requestBody:
        description: Calculate farmers NCL
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FarmerNCLRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FarmerNCLSuccess'
        '400':
          description: Invalid KCC / Aadhaar Number Supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FarmerNCLError'
  /register:
    post:
      tags:
        - Consent artifact request from Consumer
      summary: Consent artifact request from Consumer
      description: Consent artifact request from Consumer
      operationId: register
      requestBody:
        description: Consent artifact request from Consumer
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/ConsentArtifact'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
  /init:
    post:
      tags:
        - init
      summary: Initialize the loan by filling out the application form
      description: Initialize the loan by filling out the application form
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                context:
                  allOf:
                    - $ref: '#/components/schemas/Context'
                    - properties:
                        action:
                          enum:
                            - init
                      required:
                        - action
                message:
                  type: object
                  properties:
                    order:
                      $ref: '#/components/schemas/SelectResponseObject'
                  required:
                    - order
              required:
                - context
                - message
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  context:
                    allOf:
                      - $ref: '#/components/schemas/Context'
                      - properties:
                          action:
                            enum:
                              - on_search
                        required:
                          - action
                  message:
                    $ref: '#/components/schemas/SelectResponseObject'
                required:
                  - context
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  context:
                    allOf:
                      - $ref: '#/components/schemas/Context'
                      - properties:
                          action:
                            enum:
                              - on_search
                        required:
                          - action
                  error:
                    $ref: '#/components/schemas/Error'
                required:
                  - context
  /confirm:
    post:
      tags:
        - confirm
      summary: Initialize an order by providing billing and/or shipping details
      description: Initialize an order by providing billing and/or shipping details
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                context:
                  allOf:
                    - $ref: '#/components/schemas/Context'
                    - properties:
                        action:
                          enum:
                            - confirm
                      required:
                        - action
                message:
                  type: object
                  properties:
                    order:
                      $ref: '#/components/schemas/SelectResponseObject'
                  required:
                    - order
              required:
                - context
                - message
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  context:
                    allOf:
                      - $ref: '#/components/schemas/Context'
                      - properties:
                          action:
                            enum:
                              - on_search
                        required:
                          - action
                  message:
                    $ref: '#/components/schemas/SelectResponseObject'
                required:
                  - context
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  context:
                    allOf:
                      - $ref: '#/components/schemas/Context'
                      - properties:
                          action:
                            enum:
                              - on_search
                        required:
                          - action
                  error:
                    $ref: '#/components/schemas/Error'
                required:
                  - context
  /track:
    post:
      tags:
        - track
      description: Track an active order
      summary: Track an active order
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                context:
                  allOf:
                    - $ref: '#/components/schemas/Context'
                    - properties:
                        action:
                          enum:
                            - track
                      required:
                        - action
                message:
                  type: object
                  properties:
                    order_id:
                      type: string
                    callback_url:
                      type: string
                      format: uri
                  required:
                    - order_id
              required:
                - context
                - message
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  context:
                    allOf:
                      - $ref: '#/components/schemas/Context'
                      - properties:
                          action:
                            enum:
                              - on_search
                        required:
                          - action
                  message:
                    type: object
                    properties:
                      order_id:
                        type: string
                      callback_url:
                        type: string
                required:
                  - context
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  context:
                    allOf:
                      - $ref: '#/components/schemas/Context'
                      - properties:
                          action:
                            enum:
                              - on_search
                        required:
                          - action
                  error:
                    $ref: '#/components/schemas/Error'
                required:
                  - context
  /update:
    post:
      tags:
        - update
      description: Respond to any queries that the bank has raised
      summary: Respond to any queries that the bank has raised
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                context:
                  allOf:
                    - $ref: '#/components/schemas/Context'
                    - properties:
                        action:
                          enum:
                            - update
                      required:
                        - action
                message:
                  type: object
                  properties:
                    update_target:
                      description: >-
                        Comma separated values of order objects being updated.
                        For example:
                        ```"update_target":"item,billing,fulfillment"```
                      type: string
                    order:
                      description: Updated order object
                      allOf:
                        - $ref: '#/components/schemas/SelectResponseObject'
                  required:
                    - update_target
                    - order
              required:
                - context
                - message
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  context:
                    allOf:
                      - $ref: '#/components/schemas/Context'
                      - properties:
                          action:
                            enum:
                              - on_search
                        required:
                          - action
                  message:
                    type: object
                    properties:
                      catalog:
                        $ref: '#/components/schemas/SelectResponseObject'
                    required:
                      - catalog
                  error:
                    $ref: '#/components/schemas/Error'
                required:
                  - context
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  context:
                    allOf:
                      - $ref: '#/components/schemas/Context'
                      - properties:
                          action:
                            enum:
                              - on_search
                        required:
                          - action
                  error:
                    $ref: '#/components/schemas/Error'
                required:
                  - context
components:
  schemas:
    Catalog:
      description: >-
        Describes the products or services offered by a BPP. This is typically
        sent as the response to a search intent from a BAP. The payment terms,
        offers and terms of fulfillment supported by the BPP can also be
        included here. The BPP can show hierarchical nature of products/services
        in its catalog using the parent_category_id in categories. The BPP can
        also send a ttl (time to live) in the context which is the duration for
        which a BAP can cache the catalog and use the cached catalog.  <br>This
        has properties like
        bbp/descriptor,bbp/categories,bbp/fulfillments,bbp/payments,bbp/offers,bbp/providers
        and exp<br>This is used in the following situations.<br><ul><li>This is
        typically used in the discovery stage when the BPP sends the details of
        the products and services it offers as response to a search intent from
        the BAP. </li></ul>
      type: object
      properties:
        descriptor:
          $ref: '#/components/schemas/Descriptor'
        providers:
          type: array
          items:
            $ref: '#/components/schemas/Provider'
    Context:
      description: >-
        Every API call in beckn protocol has a context. It provides a high-level
        overview to the receiver about the nature of the intended transaction.
        Typically, it is the BAP that sets the transaction context based on the
        consumer's location and action on their UI. But sometimes, during
        unsolicited callbacks, the BPP also sets the transaction context but it
        is usually the same as the context of a previous full-cycle,
        request-callback interaction between the BAP and the BPP. The context
        object contains four types of fields. <ol><li>Demographic information
        about the transaction using fields like `domain`, `country`, and
        `region`.</li><li>Addressing details like the sending and receiving
        platform's ID and API URL.</li><li>Interoperability information like the
        protocol version that implemented by the sender and,</li><li>Transaction
        details like the method being called at the receiver's endpoint, the
        transaction_id that represents an end-to-end user session at the BAP, a
        message ID to pair requests with callbacks, a timestamp to capture
        sending times, a ttl to specifiy the validity of the request, and a key
        to encrypt information if necessary.</li></ol> This object must be
        passed in every interaction between a BAP and a BPP. In HTTP/S
        implementations, it is not necessary to send the context during the
        synchronous response. However, in asynchronous protocols, the context
        must be sent during all interactions,
      type: object
      properties:
        domain:
          description: Domain code that is relevant to this transaction context
          type: string
        action:
          description: >-
            The Beckn protocol method being called by the sender and executed at
            the receiver.
          type: string
        version:
          type: string
          description: Version of transaction protocol being used by the sender.
        bap_id:
          description: Subscriber ID of the BAP
          allOf:
            - description: >-
                A globally unique identifier of the platform, Typically it is
                the fully qualified domain name (FQDN) of the platform.
              type: string
        bap_uri:
          description: Subscriber URL of the BAP for accepting callbacks from BPPs.
          allOf:
            - description: >-
                The callback URL of the Subscriber. This should necessarily
                contain the same domain name as set in `subscriber_id``.
              type: string
              format: uri
        bpp_id:
          description: Subscriber ID of the BPP
          allOf:
            - $ref: '#/components/schemas/Context/properties/bap_id/allOf/0'
        bpp_uri:
          description: Subscriber URL of the BPP for accepting calls from BAPs.
          allOf:
            - $ref: '#/components/schemas/Context/properties/bap_uri/allOf/0'
        transaction_id:
          description: >-
            This is a unique value which persists across all API calls from
            `search` through `confirm`. This is done to indicate an active user
            session across multiple requests. The BPPs can use this value to
            push personalized recommendations, and dynamic offerings related to
            an ongoing transaction despite being unaware of the user active on
            the BAP.
          type: string
          format: uuid
        message_id:
          description: >-
            This is a unique value which persists during a request / callback
            cycle. Since beckn protocol APIs are asynchronous, BAPs need a
            common value to match an incoming callback from a BPP to an earlier
            call. This value can also be used to ignore duplicate messages
            coming from the BPP. It is recommended to generate a fresh
            message_id for every new interaction. When sending unsolicited
            callbacks, BPPs must generate a new message_id.
          type: string
          format: uuid
        timestamp:
          description: Time of request generation in RFC3339 format
          type: string
          format: date-time
        ttl:
          description: >-
            The duration in ISO8601 format after timestamp for which this
            message holds valid
          type: string
    Descriptor:
      description: Physical description of something.
      type: object
      properties:
        name:
          type: string
        code:
          type: string
    Error:
      description: >-
        Describes an error object that is returned by a BAP, BPP or BG as a
        response or callback to an action by another network participant. This
        object is sent when any request received by a network participant is
        unacceptable. This object can be sent either during Ack or with the
        callback.
      type: object
      properties:
        code:
          type: string
          description: >-
            Standard error code. For full list of error codes, refer to
            docs/protocol-drafts/BECKN-005-ERROR-CODES-DRAFT-01.md of this repo"
        paths:
          type: string
          description: >-
            Path to json schema generating the error. Used only during json
            schema validation errors
        message:
          type: string
          description: >-
            Human readable message describing the error. Used mainly for
            logging. Not recommended to be shown to the user.
    SelectRequestObject:
      description: Defines the schema for the order object sent in the `/select` request
      type: object
      properties:
        provider:
          description: Details of the provider of the ordered item
          type: object
          properties:
            id:
              description: ID of the provider of the loan product item
              type: string
        created_at:
          description: Timestamp at which the order was initiated and created
          type: string
          format: date-time
        updated_at:
          description: Timestamp at which the order was updated
          type: string
          format: date-time
        items:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              quantity:
                type: integer
    SelectResponseObject:
      description: Defines the schema for the order object sent as a reponse to select call
      type: object
      properties:
        order:
          type: object
          properties:
            id:
              description: ID of the order generated and added by the provider
            provider:
              description: Information about the provider of the loan product
              type: object
              properties:
                id:
                  description: ID of the provider
                  type: string
                descriptor:
                  type: object
                  properties:
                    name:
                      type: string
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/LoanItem'
                fulfillmentes:
                  type: array
                  items:
                    $ref: '#/components/schemas/LoanFulfillmentObject'
                billing:
                  type: object
                  properties:
                    address:
                      description: Address of the loan applicant
                      type: string
                payment:
                  type: object
                  properties:
                    id:
                      description: ID of the payment
                      type: string
                    collected_by:
                      description: Details of who the collector of payment is
                      type: string
                    params:
                      description: Parameters of the payment
                      type: object
                      properties:
                        bank_code:
                          description: >-
                            Bank code of the account where the deposit is to be
                            made
                          type: string
                    tags:
                      description: >-
                        Various information requried for the loan application
                        with no first class mapping in the beckn spec
                      type: array
                      items:
                        type: object
                        properties:
                          descriptor:
                            description: >-
                              Description of the type of data enclosed by the
                              list of items here
                            type: object
                            properties:
                              short_desc:
                                type: string
                                example: Personal details of the loan applicant
                          list:
                            type: array
                            items:
                              type: object
                              properties:
                                descriptor:
                                  type: object
                                  properties:
                                    name:
                                      description: Name of the field
                                      type: string
                            example:
                              - descriptor:
                                  name: PACS
                                value: BANK PACS NAME
    LoanFulfillmentObject:
      description: Defines a fulfullment object
      type: object
      properties:
        id:
          description: ID of the fulfillment
          type: string
        type:
          description: type of the fulfillment
          type: string
        provider_id:
          description: ID of the provider for this particular fulfillment
          type: string
        tracking:
          description: >-
            Indicator to show if tracking is supported or not for this
            fulfillment
          type: boolean
        agent:
          description: Details of the agent who will fulfill this fulfillment
          type: object
          properties:
            name:
              description: Name of the agent
              type: string
        customer:
          description: Information about the  loan applicant
          type: object
          properties:
            person:
              description: Details of the person
              type: object
              properties:
                name:
                  description: Name of the loan applicant
                  type: string
            dob:
              description: Date of birth of the loan applicant
            gender:
              description: Gender of the loan applicant
              type: string
            creds:
              description: Credentials and documents for a customer
              type: object
              properties:
                type:
                  description: type of the credential
                  type: string
                id:
                  description: ID of the credential
                  type: string
                url:
                  description: URL of the credential
                  type: string
            tags:
              description: >-
                Various information requried for the loan application with no
                first class mapping in the beckn spec
              type: array
              items:
                type: object
                properties:
                  descriptor:
                    description: >-
                      Description of the type of data enclosed by the list of
                      items here
                    type: object
                    properties:
                      short_desc:
                        type: string
                        example: Personal details of the loan applicant
                  list:
                    type: array
                    items:
                      type: object
                      properties:
                        descriptor:
                          type: object
                          properties:
                            name:
                              description: Name of the field
                              type: string
                    example:
                      - descriptor:
                          name: father-name
                        value: john doe
                      - descriptor:
                          name: father-name
                        value: john doe
                      - descriptor:
                          name: marital-status
                        value: single
    LoanItem:
      description: >-
        Defines a loan item as it is structured inside the catalog send in
        `/on_search`
      type: object
      properties:
        id:
          description: ID of the loan item
          type: string
        descriptor:
          description: Contains the description for the loan item
          type: object
          properties:
            name:
              type: string
        price:
          description: Holds information about the loan amount
          type: number
        provider:
          type: object
          properties:
            id:
              type: string
        tags:
          type: object
          properties:
            block:
              type: string
            district:
              type: string
            loan_tenure:
              type: string
            interest_rate:
              type: number
            processing_charges:
              type: number
    Provider:
      description: Describes the catalog of a business.
      type: object
      properties:
        id:
          type: string
          description: Id of the provider
        descriptor:
          $ref: '#/components/schemas/Descriptor'
        items:
          type: array
          items:
            $ref: '#/components/schemas/LoanItem'
    FarmerKCCRequest:
      type: object
      properties:
        kcc_number:
          type: string
          description: KCC Number entered
          example: 123ABC
        aadhaar_number:
          type: string
          description: Farmer's Aadhaar number
          example: XXXXYYYYZZZZ
    FarmerKCCSuccess:
      type: object
      properties:
        bank_token:
          type: string
          description: Authentication token from bank
          example: hKpKupTM391pE10xfQiorMxXarRKAHRhTfH_xkGf7U4
    FarmerKCCError:
      type: object
      properties:
        error_code:
          type: string
          description: Code of the error
          example: 1001
        error_message:
          type: string
          description: Message detailing the error
          example: KCC Number not found
    FarmerNCLRequest:
      type: object
      properties:
        district_code:
          type: integer
          description: District code of user
          example: 17
        land:
          type: integer
          description: User's land in meters
          example: 1000
        crop:
          type: object
          properties:
            code:
              type: integer
              description: Code of the crop selected by user
            name:
              type: string
              description: Name of the crop selected by user
    FarmerNCLSuccess:
      type: object
      properties:
        ncl:
          type: number
          description: NCL for farmer
          example: 50000
    FarmerNCLError:
      type: object
      properties:
        error_code:
          type: string
          description: Code of the error
          example: 1001
        error_message:
          type: string
          description: Message detailing the error
          example: Invalid crop code
    
    RegisterResponse:
      description: The object returned as response on a consent artifact request
      type: object
      properties:
        caId:
          description: ID of the consent artifact in UUID format
          type: string
        consent_artifact:
          description: The actual consent artifact sent along side the request
          allOf:
            - $ref: '#/components/schemas/ConsentArtifact'
        user_id:
          description: user id of the consumer data is requested from
          type: string
        state:
          description: current state of the request
          type: string
        created_by:
          type: string
        webhook_url:
          description: Webhook URL where the user was notified of the access request
          
    ConsentArtifact:
      description: This schema defines the structure of a consent artifact. In the description of fields, the term `user` refers to the entity whose data needs to be accessed. For example in case of Safal Odisha, the `user` will be a farmer whose data needs to be fetched from the Krushak Odisha database.
      type: object
      properties:
        signature:
          description: Cryptographic signature to check the integrity of a consent artifact
          type: string
        created:
          description: Date on which the artifact was created
          type: string
        expires:
          description: Date on which the consent agreed for expires
          type: string
        id:
          description: UUID of the consent artifact
          type: string
        revocable:
          description: Defines if the credential is revocable or not
          type: boolean
        collector:
          description: Information about the data collector
          type: object
          properties:
            id: 
              type: string
            url:
              type: string
        consumer:
          description: Information about the data consumer (whoever will be using the data fetched using the consent artifact)
          type: object
          properties:
            id: 
              type: string
            url:
              type: string
        provider:
          description: Information about the data provider
          type: object
          properties:
            id: 
              type: string
            url:
              type: string
        revoker:
          description: Information about the artifact revoker
          type: object
          properties:
            id: 
              type: string
            url:
              type: string
        user:
          description: Information about the user whose data can be accessed via this consent artifact
          type: object
          properties:
            id: 
              type: string
        purpose:
          description: Purpose of the consent artifact
          type: string
        user_sign:
          description: crypotgraphic signature of the user whose data is to be accessed
          type: string
        collector_sign:
          description: cryptographic signature of the collector
          type: string
        frequency:
          description: This object represents the frequence with which the data can be accessed using this consent artifact. We can do `limit` number of requests within `ttl` number of seconds  
          type: object
          properties:
            ttl:
              type: number
            limit:
              type: number
        total_queries_allowed:
          description: Total data retrieval queries that can be made using this consent artifact in its lifetime, after these are exhausted the consent artifact cannot be used to send further requests even if it not revoked or expired.
          type: number
        log:
          description: A log of the access requests
          type: object
          properties:
            consent_use:
              type: object
              properties:
                url: 
                  type: string
            data_access:
              type: object
              properties:
                url: 
                  type: string
        data:
          description: This is the superset GraphQL query containing of all the fields that the user has granted access to.
          type: string

